{"ast":null,"code":"\"use strict\";\n\nvar _extends = Object.assign || function (a) {\n  for (var c, b = 1; b < arguments.length; b++) for (var d in c = arguments[b], c) Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d]);\n\n  return a;\n},\n    _react = require(\"react\"),\n    _react2 = _interopRequireDefault(_react),\n    _deepIs = require(\"deep-is\"),\n    _deepIs2 = _interopRequireDefault(_deepIs),\n    _clone = require(\"clone\"),\n    _clone2 = _interopRequireDefault(_clone),\n    _propTypes = require(\"prop-types\"),\n    _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Mathmax = Math.max,\n    _Mathmin = Math.min;\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nfunction _interopRequireDefault(a) {\n  return a && a.__esModule ? a : {\n    default: a\n  };\n}\n\nfunction _objectWithoutProperties(a, b) {\n  var c = {};\n\n  for (var d in a) 0 <= b.indexOf(d) || Object.prototype.hasOwnProperty.call(a, d) && (c[d] = a[d]);\n\n  return c;\n}\n\nfunction _classCallCheck(a, b) {\n  if (!(a instanceof b)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _possibleConstructorReturn(a, b) {\n  if (!a) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return b && (\"object\" == typeof b || \"function\" == typeof b) ? b : a;\n}\n\nfunction _inherits(a, b) {\n  if (\"function\" != typeof b && null !== b) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof b);\n  a.prototype = Object.create(b && b.prototype, {\n    constructor: {\n      value: a,\n      enumerable: !1,\n      writable: !0,\n      configurable: !0\n    }\n  }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b);\n}\n\nvar TableDragSelect = function (a) {\n  function b() {\n    var c, d, f, g;\n\n    _classCallCheck(this, b);\n\n    for (var h = arguments.length, k = Array(h), l = 0; l < h; l++) k[l] = arguments[l];\n\n    return g = (d = (f = _possibleConstructorReturn(this, (c = b.__proto__ || Object.getPrototypeOf(b)).call.apply(c, [this].concat(k))), f), f.state = {\n      selectionStarted: !1,\n      startRow: null,\n      startColumn: null,\n      endRow: null,\n      endColumn: null,\n      addMode: null\n    }, f.componentDidMount = function () {\n      window.addEventListener(\"mouseup\", f.handleTouchEndWindow), window.addEventListener(\"touchend\", f.handleTouchEndWindow);\n    }, f.componentWillUnmount = function () {\n      window.removeEventListener(\"mouseup\", f.handleTouchEndWindow), window.removeEventListener(\"touchend\", f.handleTouchEndWindow);\n    }, f.render = function () {\n      var m = f.props,\n          n = m.value,\n          o = m.onChange,\n          p = _objectWithoutProperties(m, [\"value\", \"onChange\"]);\n\n      return _react2.default.createElement(\"table\", _extends({\n        className: \"table-drag-select\"\n      }, p), _react2.default.createElement(\"tbody\", null, f.renderRows()));\n    }, f.renderRows = function () {\n      return _react2.default.Children.map(f.props.children, function (m, n) {\n        return _react2.default.createElement(\"tr\", _extends({\n          key: n\n        }, m.props), _react2.default.Children.map(m.props.children, function (o, p) {\n          return _react2.default.createElement(Cell, _extends({\n            key: p,\n            onTouchStart: f.handleTouchStartCell,\n            onTouchMove: f.handleTouchMoveCell,\n            selected: f.props.value[n][p],\n            beingSelected: f.isCellBeingSelected(n, p)\n          }, o.props), o.props.children);\n        }));\n      });\n    }, f.handleTouchStartCell = function (m) {\n      var n = 0 === m.button,\n          o = \"mousedown\" !== m.type;\n\n      if (!f.state.selectionStarted && (n || o)) {\n        m.preventDefault();\n        var p = eventToCellLocation(m),\n            q = p.row,\n            r = p.column;\n        f.setState({\n          selectionStarted: !0,\n          startRow: q,\n          startColumn: r,\n          endRow: q,\n          endColumn: r,\n          addMode: !f.props.value[q][r]\n        });\n      }\n    }, f.handleTouchMoveCell = function (m) {\n      if (f.state.selectionStarted) {\n        m.preventDefault();\n        var n = eventToCellLocation(m),\n            o = n.row,\n            p = n.column;\n        f.setState({\n          endRow: o,\n          endColumn: p\n        });\n      }\n    }, f.handleTouchEndWindow = function (m) {\n      var n = 0 === m.button,\n          o = \"mousedown\" !== m.type;\n\n      if (f.state.selectionStarted && (n || o)) {\n        for (var p = (0, _clone2.default)(f.props.value), q = _Mathmin(f.state.startRow, f.state.endRow), r = _Mathmax(f.state.startRow, f.state.endRow), s = q; s <= r; s++) for (var t = _Mathmin(f.state.startColumn, f.state.endColumn), u = _Mathmax(f.state.startColumn, f.state.endColumn), v = t; v <= u; v++) p[s][v] = f.state.addMode;\n\n        f.setState({\n          selectionStarted: !1\n        }), f.props.onChange(p);\n      }\n    }, f.isCellBeingSelected = function (m, n) {\n      var o = _Mathmin(f.state.startRow, f.state.endRow),\n          p = _Mathmax(f.state.startRow, f.state.endRow),\n          q = _Mathmin(f.state.startColumn, f.state.endColumn),\n          r = _Mathmax(f.state.startColumn, f.state.endColumn);\n\n      return f.state.selectionStarted && m >= o && m <= p && n >= q && n <= r;\n    }, d), _possibleConstructorReturn(f, g);\n  }\n\n  return _inherits(b, a), b;\n}(_react2.default.Component);\n\nTableDragSelect.propTypes = {\n  value: function value(a) {\n    var b = new Error(\"Invalid prop `value` supplied to `TableDragSelect`. Validation failed.\");\n    if (!Array.isArray(a.value)) return b;\n\n    if (0 !== a.value.length) {\n      var c = a.value[0].length,\n          d = !0,\n          f = !1,\n          g = void 0;\n\n      try {\n        for (var k, q, h = a.value[Symbol.iterator](); !(d = (k = h.next()).done); d = !0) {\n          if (q = k.value, !Array.isArray(q) || q.length !== c) return b;\n          var l = !0,\n              m = !1,\n              n = void 0;\n\n          try {\n            for (var p, r, o = q[Symbol.iterator](); !(l = (p = o.next()).done); l = !0) if (r = p.value, \"boolean\" != typeof r) return b;\n          } catch (r) {\n            m = !0, n = r;\n          } finally {\n            try {\n              !l && o.return && o.return();\n            } finally {\n              if (m) throw n;\n            }\n          }\n        }\n      } catch (q) {\n        f = !0, g = q;\n      } finally {\n        try {\n          !d && h.return && h.return();\n        } finally {\n          if (f) throw g;\n        }\n      }\n    }\n  },\n  onChange: _propTypes2.default.func,\n  children: function children(a) {\n    if (!TableDragSelect.propTypes.value(a)) {\n      var b = new Error(\"Invalid prop `children` supplied to `TableDragSelect`. Validation failed.\"),\n          c = _react2.default.Children.toArray(a.children),\n          d = a.value.length,\n          f = 0 === a.value.length ? 0 : a.value[0].length;\n\n      if (c.length !== d) return b;\n      var g = !0,\n          h = !1,\n          k = void 0;\n\n      try {\n        for (var m, l = c[Symbol.iterator](); !(g = (m = l.next()).done); g = !0) {\n          var s = m.value,\n              t = _react2.default.Children.toArray(s.props.children);\n\n          if (\"tr\" !== s.type || t.length !== f) return b;\n          var n = !0,\n              o = !1,\n              p = void 0;\n\n          try {\n            for (var r, u, q = t[Symbol.iterator](); !(n = (r = q.next()).done); n = !0) if (u = r.value, \"td\" !== u.type) return b;\n          } catch (u) {\n            o = !0, p = u;\n          } finally {\n            try {\n              !n && q.return && q.return();\n            } finally {\n              if (o) throw p;\n            }\n          }\n        }\n      } catch (s) {\n        h = !0, k = s;\n      } finally {\n        try {\n          !g && l.return && l.return();\n        } finally {\n          if (h) throw k;\n        }\n      }\n    }\n  }\n}, TableDragSelect.defaultProps = {\n  value: [],\n  onChange: function onChange() {}\n}, exports.default = TableDragSelect;\n\nvar Cell = function (a) {\n  function b() {\n    var c, d, f, g;\n\n    _classCallCheck(this, b);\n\n    for (var h = arguments.length, k = Array(h), l = 0; l < h; l++) k[l] = arguments[l];\n\n    return g = (d = (f = _possibleConstructorReturn(this, (c = b.__proto__ || Object.getPrototypeOf(b)).call.apply(c, [this].concat(k))), f), f.shouldComponentUpdate = function (m) {\n      return f.props.beingSelected !== m.beingSelected || f.props.selected !== m.selected;\n    }, f.componentDidMount = function () {\n      f.td.addEventListener(\"touchstart\", f.handleTouchStart, {\n        passive: !1\n      }), f.td.addEventListener(\"touchmove\", f.handleTouchMove, {\n        passive: !1\n      });\n    }, f.componentWillUnmount = function () {\n      f.td.removeEventListener(\"touchstart\", f.handleTouchStart), f.td.removeEventListener(\"touchmove\", f.handleTouchMove);\n    }, f.render = function () {\n      var m = f.props,\n          n = m.className,\n          o = m.disabled,\n          p = m.beingSelected,\n          q = m.selected,\n          r = m.onTouchStart,\n          s = m.onTouchMove,\n          t = _objectWithoutProperties(m, [\"className\", \"disabled\", \"beingSelected\", \"selected\", \"onTouchStart\", \"onTouchMove\"]);\n\n      return o ? n += \" cell-disabled\" : (n += \" cell-enabled\", q && (n += \" cell-selected\"), p && (n += \" cell-being-selected\")), _react2.default.createElement(\"td\", _extends({\n        ref: function ref(u) {\n          return f.td = u;\n        },\n        className: n,\n        onMouseDown: f.handleTouchStart,\n        onMouseMove: f.handleTouchMove\n      }, t), f.props.children || _react2.default.createElement(\"span\", null, \"\\xA0\"));\n    }, f.handleTouchStart = function (m) {\n      f.props.disabled || f.props.onTouchStart(m);\n    }, f.handleTouchMove = function (m) {\n      f.props.disabled || f.props.onTouchMove(m);\n    }, d), _possibleConstructorReturn(f, g);\n  }\n\n  return _inherits(b, a), b;\n}(_react2.default.Component),\n    eventToCellLocation = function (a) {\n  var b;\n\n  if (a.touches) {\n    var c = a.touches[0];\n    b = document.elementFromPoint(c.clientX, c.clientY);\n  } else for (b = a.target; \"TD\" !== b.tagName;) b = b.parentNode;\n\n  return {\n    row: b.parentNode.rowIndex,\n    column: b.cellIndex\n  };\n};","map":{"version":3,"sources":["../index.js"],"names":["TableDragSelect","Component","propTypes","value","Array","props","row","onChange","children","trs","tr","tds","defaultProps","state","selectionStarted","startRow","startColumn","endRow","endColumn","addMode","componentDidMount","window","componentWillUnmount","render","renderRows","cell","handleTouchStartCell","isLeftClick","e","eventToCellLocation","handleTouchMoveCell","handleTouchEndWindow","Math","min","max","column","isCellBeingSelected","maxColumn","Cell","shouldComponentUpdate","nextProps","passive","disabled","selected","beingSelected","handleTouchStart","handleTouchMove","document","touch","target"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport equal from \"deep-is\";\nimport clone from \"clone\";\nimport PropTypes from \"prop-types\";\n\nexport default class TableDragSelect extends React.Component {\n  static propTypes = {\n    value: props => {\n      const error = new Error(\n        \"Invalid prop `value` supplied to `TableDragSelect`. Validation failed.\"\n      );\n      if (!Array.isArray(props.value)) {\n        return error;\n      }\n      if (props.value.length === 0) {\n        return;\n      }\n      const columnCount = props.value[0].length;\n      for (const row of props.value) {\n        if (!Array.isArray(row) || row.length !== columnCount) {\n          return error;\n        }\n        for (const cell of row) {\n          if (typeof cell !== \"boolean\") {\n            return error;\n          }\n        }\n      }\n    },\n    onChange: PropTypes.func,\n    children: props => {\n      if (TableDragSelect.propTypes.value(props)) {\n        return; // Let error be handled elsewhere\n      }\n      const error = new Error(\n        \"Invalid prop `children` supplied to `TableDragSelect`. Validation failed.\"\n      );\n      const trs = React.Children.toArray(props.children);\n      const rowCount = props.value.length;\n      const columnCount = props.value.length === 0 ? 0 : props.value[0].length;\n      if (trs.length !== rowCount) {\n        return error;\n      }\n      for (const tr of trs) {\n        const tds = React.Children.toArray(tr.props.children);\n        if (tr.type !== \"tr\" || tds.length !== columnCount) {\n          return error;\n        }\n        for (const td of tds) {\n          if (td.type !== \"td\") {\n            return error;\n          }\n        }\n      }\n    }\n  };\n\n  static defaultProps = {\n    value: [],\n    onChange: () => {}\n  };\n\n  state = {\n    selectionStarted: false,\n    startRow: null,\n    startColumn: null,\n    endRow: null,\n    endColumn: null,\n    addMode: null\n  };\n\n  componentDidMount = () => {\n    window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n    window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n    window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n  };\n\n  render = () => {\n    const { value, onChange, ...props } = this.props;\n    return (\n      <table className=\"table-drag-select\" {...props}>\n        <tbody>\n          {this.renderRows()}\n        </tbody>\n      </table>\n    );\n  };\n\n  renderRows = () =>\n    React.Children.map(this.props.children, (tr, i) => {\n      return (\n        <tr key={i} {...tr.props}>\n          {React.Children.map(tr.props.children, (cell, j) =>\n            <Cell\n              key={j}\n              onTouchStart={this.handleTouchStartCell}\n              onTouchMove={this.handleTouchMoveCell}\n              selected={this.props.value[i][j]}\n              beingSelected={this.isCellBeingSelected(i, j)}\n              {...cell.props}\n            >\n              {cell.props.children}\n            </Cell>\n          )}\n        </tr>\n      );\n    });\n\n  handleTouchStartCell = e => {\n    const isLeftClick = e.button === 0;\n    const isTouch = e.type !== \"mousedown\";\n    if (!this.state.selectionStarted && (isLeftClick || isTouch)) {\n      e.preventDefault();\n      const { row, column } = eventToCellLocation(e);\n      this.setState({\n        selectionStarted: true,\n        startRow: row,\n        startColumn: column,\n        endRow: row,\n        endColumn: column,\n        addMode: !this.props.value[row][column]\n      });\n    }\n  };\n\n  handleTouchMoveCell = e => {\n    if (this.state.selectionStarted) {\n      e.preventDefault();\n      const { row, column } = eventToCellLocation(e);\n      this.setState({\n        endRow: row,\n        endColumn: column\n      });\n    }\n  };\n\n  handleTouchEndWindow = e => {\n    const isLeftClick = e.button === 0;\n    const isTouch = e.type !== \"mousedown\";\n    if (this.state.selectionStarted && (isLeftClick || isTouch)) {\n      const value = clone(this.props.value);\n      const minRow = Math.min(this.state.startRow, this.state.endRow);\n      const maxRow = Math.max(this.state.startRow, this.state.endRow);\n      for (let row = minRow; row <= maxRow; row++) {\n        const minColumn = Math.min(\n          this.state.startColumn,\n          this.state.endColumn\n        );\n        const maxColumn = Math.max(\n          this.state.startColumn,\n          this.state.endColumn\n        );\n        for (let column = minColumn; column <= maxColumn; column++) {\n          value[row][column] = this.state.addMode;\n        }\n      }\n      this.setState({ selectionStarted: false });\n      this.props.onChange(value);\n    }\n  };\n\n  isCellBeingSelected = (row, column) => {\n    const minRow = Math.min(this.state.startRow, this.state.endRow);\n    const maxRow = Math.max(this.state.startRow, this.state.endRow);\n    const minColumn = Math.min(this.state.startColumn, this.state.endColumn);\n    const maxColumn = Math.max(this.state.startColumn, this.state.endColumn);\n    return (\n      this.state.selectionStarted &&\n      (row >= minRow &&\n        row <= maxRow &&\n        column >= minColumn &&\n        column <= maxColumn)\n    );\n  };\n}\n\nclass Cell extends React.Component {\n  // This optimization gave a 10% performance boost while drag-selecting\n  // cells\n  shouldComponentUpdate = nextProps =>\n    this.props.beingSelected !== nextProps.beingSelected ||\n    this.props.selected !== nextProps.selected;\n\n  componentDidMount = () => {\n    // We need to call addEventListener ourselves so that we can pass\n    // {passive: false}\n    this.td.addEventListener(\"touchstart\", this.handleTouchStart, {\n      passive: false\n    });\n    this.td.addEventListener(\"touchmove\", this.handleTouchMove, {\n      passive: false\n    });\n  };\n\n  componentWillUnmount = () => {\n    this.td.removeEventListener(\"touchstart\", this.handleTouchStart);\n    this.td.removeEventListener(\"touchmove\", this.handleTouchMove);\n  };\n\n  render = () => {\n    let {\n      className,\n      disabled,\n      beingSelected,\n      selected,\n      onTouchStart,\n      onTouchMove,\n      ...props\n    } = this.props;\n    if (disabled) {\n      className += \" cell-disabled\";\n    } else {\n      className += \" cell-enabled\";\n      if (selected) {\n        className += \" cell-selected\";\n      }\n      if (beingSelected) {\n        className += \" cell-being-selected\";\n      }\n    }\n    return (\n      <td\n        ref={td => (this.td = td)}\n        className={className}\n        onMouseDown={this.handleTouchStart}\n        onMouseMove={this.handleTouchMove}\n        {...props}\n      >\n        {this.props.children || <span>&nbsp;</span>}\n      </td>\n    );\n  };\n\n  handleTouchStart = e => {\n    if (!this.props.disabled) {\n      this.props.onTouchStart(e);\n    }\n  };\n\n  handleTouchMove = e => {\n    if (!this.props.disabled) {\n      this.props.onTouchMove(e);\n    }\n  };\n}\n\n// Takes a mouse or touch event and returns the corresponding row and cell.\n// Example:\n//\n// eventToCellLocation(event);\n// {row: 2, column: 3}\nconst eventToCellLocation = e => {\n  let target;\n  // For touchmove and touchend events, e.target and e.touches[n].target are\n  // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n  // to use e.target.\n  if (e.touches) {\n    const touch = e.touches[0];\n    target = document.elementFromPoint(touch.clientX, touch.clientY);\n  } else {\n    target = e.target;\n    while (target.tagName !== \"TD\") {\n      target = target.parentNode;\n    }\n  }\n  return {\n    row: target.parentNode.rowIndex,\n    column: target.cellIndex\n  };\n};\n"]},"metadata":{},"sourceType":"script"}