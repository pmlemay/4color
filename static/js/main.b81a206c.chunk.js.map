{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","inputMode","className","this","selected","onClick","setState","React","Component","InputControl","render","children","InputMode","TableDragSelect","componentDidMount","window","addEventListener","handleTouchEndWindow","handleKeyPressWindow","handleKeyUpWindow","componentWillUnmount","removeEventListener","renderRows","Children","map","tr","i","key","cell","j","onTouchStart","handleTouchStartCell","onTouchMove","handleTouchMoveCell","fixedValue","value","data","centerNote","cornerNote","color","beingSelected","isCellBeingSelected","e","isLeftClick","button","isTouch","type","selectionStarted","eventIsInputButton","resetSelection","preventDefault","eventToCellLocation","row","column","onSelectionStart","prevState","selection","some","clone","forEach","element","onChange","ctrlKeyIsPressed","ctrlKey","shouldDelete","keyCode","isNumpadNumber","code","indexOf","isNumber","valueToInsert","substring","String","fromCharCode","shouldUpdateData","shiftKey","target","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","rowIndex","cellIndex","shouldAppend","length","defaultProps","maxRows","Infinity","maxColumns","onInput","Cell","shouldComponentUpdate","nextProps","td","handleTouchStart","passive","handleTouchMove","cellValue","innerDivClassName","disabled","trim","ref","onMouseDown","onMouseMove","Board","galaxyMapping","galaxies","index","galaxyStyle","top","left","style","cells","grid","Array","fill","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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MwG,UACd,EAAKxG,MAAM+B,aAAaY,I,EAI5B0D,gBAAkB,SAAA1D,GACX,EAAK3C,MAAMwG,UACd,EAAKxG,MAAMiC,YAAYU,I,6BAxFVnC,IAAMC,WA6FnBoG,E,YACJ,WAAY7G,GAAQ,IAAD,uBACjB,4CAAMA,KA4BRW,OAAS,WACP,IAAImG,EAAgB,EAAK7G,MAAM8G,SAAStF,KAAI,WAASuF,GAAW,IAExDC,EAAc,CAACC,IAAS,KAF+B,EAAjBvF,EAERwF,KAAU,KAFe,EAAdrF,EAEK,cAAiB,QACrE,OAAO,yBAAKF,IAAKoF,EAAO7G,UAAU,SAASiH,MAAOH,OAEpD,OAAO,yBAAK9G,UAAU,aACpB,yBAAKA,UAAU,QACZ2G,EACD,kBAAC,EAAD,CACEzE,KAAM,EAAKpC,MAAMoH,MACjBnH,UAAW,EAAKF,MAAME,UACtB4D,SAAU,SAAAuD,GAAK,OAAI,EAAK9G,SAAS,CAAE8G,YAEnC,4BACA,iCACA,iCACA,6BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCAEA,4BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCAEA,4BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCAEA,4BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCAEA,4BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCAEA,4BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCAEA,4BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCAEA,4BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCAEA,4BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCAEA,4BACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,sCA/JN,IACIC,EAAO,IAAIC,MADA,IACgBC,KAAM,MAAO/F,KAAI,kBAAM,IAAI8F,MAD3C,IAC2DC,KAAK,MAAM/F,KAAI,iBACvF,CACEpB,UAAU,EACV+B,MAAO,KACPG,WAAY,KACZD,WAAY,KACZH,WAAY,YATC,OAYjB,EAAKlC,MAAQ,CACXoH,MAAOC,EACPP,SAAU,CACR,CAACpF,EAAE,EAAEG,EAAE,GACP,CAACH,EAAE,EAAEG,EAAE,IAAI,CAACH,EAAE,EAAEG,EAAE,IAClB,CAACH,EAAE,EAAEG,EAAE,GAAG,CAACH,EAAE,EAAEG,EAAE,GAAG,CAACH,EAAE,EAAEG,EAAE,IAC3B,CAACH,EAAE,EAAEG,EAAE,GACP,CAACH,EAAE,EAAEG,EAAE,GAAG,CAACH,EAAE,EAAEG,EAAE,IAAI,CAACH,EAAE,EAAEG,EAAE,IAC5B,CAACH,EAAE,GAAGG,EAAE,GAAG,CAACH,EAAE,GAAGG,EAAE,IAAI,CAACH,EAAE,GAAGG,EAAE,IAC/B,CAACH,EAAE,GAAGG,EAAE,GACR,CAACH,EAAE,GAAGG,EAAE,GAAG,CAACH,EAAE,GAAGG,EAAE,IACnB,CAACH,EAAE,GAAGG,EAAE,GAAG,CAACH,EAAE,GAAGG,EAAE,IACnB,CAACH,EAAE,GAAGG,EAAE,GACR,CAACH,EAAE,GAAGG,EAAE,MAzBK,E,2BADDtB,IAAMC,WA0KXV,ICrmBK0H,QACW,cAA7BzG,OAAO0G,SAASC,UAEe,UAA7B3G,OAAO0G,SAASC,UAEhB3G,OAAO0G,SAASC,SAASC,MACvB,2DCZNC,IAASlH,OAAO,kBAAC,EAAD,MAASqE,SAAS8C,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b81a206c.chunk.js","sourcesContent":["import React from 'react';\r\nimport clone from \"clone\";\r\nimport PropTypes from \"prop-types\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputMode: 1\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            inputMode={this.state.inputMode}\r\n          />\r\n        </div>\r\n        <div className=\"game-controls\">\r\n          <div className='input-modes'>\r\n            <InputMode \r\n              selected={this.state.inputMode === 1}\r\n              onClick={() => this.setState({ inputMode: 1 })}\r\n              >\r\n              Normal\r\n            </InputMode>\r\n            <InputMode \r\n              selected={this.state.inputMode === 2}\r\n              onClick={() => this.setState({ inputMode: 2 })}\r\n              >\r\n              Color\r\n            </InputMode>\r\n          </div>\r\n          <div className='input-controls'>\r\n            <InputControl></InputControl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InputControl extends React.Component {\r\n  render = () => {\r\n    let {\r\n      className = \"input-control-button\",\r\n      onClick\r\n    } = this.props;\r\n\r\n    return (\r\n      <button \r\n        className={className}\r\n        onClick={onClick}> \r\n        {this.props.children}\r\n      </button>\r\n    );\r\n  };\r\n}\r\n\r\nclass InputMode extends React.Component {\r\n  render = () => {\r\n    let {\r\n      className = \"input-mode-button\",\r\n      selected,\r\n      onClick\r\n    } = this.props;\r\n    if(selected) {\r\n      className += \" selected\";\r\n    }\r\n    return (\r\n      <button \r\n        className={className}\r\n        onClick={onClick}> \r\n        {this.props.children}\r\n      </button>\r\n    );\r\n  };\r\n}\r\n\r\nclass TableDragSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectionStarted: false,\r\n      shouldAppend: false,\r\n      ctrlKeyIsPressed: false,\r\n      selection: []\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    data: props => {\r\n      const error = new Error(\r\n        \"Invalid prop `data` supplied to `TableDragSelect`. Validation failed.\"\r\n      );\r\n      if (!Array.isArray(props.data)) {\r\n        return error;\r\n      }\r\n      if (props.data.length === 0) {\r\n        return;\r\n      }\r\n      const columnCount = props.data[0].length;\r\n      for (const row of props.data) {\r\n        if (!Array.isArray(row) || row.length !== columnCount) {\r\n          return error;\r\n        }\r\n        for (const cell of row) {\r\n          if (typeof cell.selected !== \"boolean\") {\r\n            return error;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    maxRows: PropTypes.number,\r\n    maxColumns: PropTypes.number,\r\n    onSelectionStart: PropTypes.func,\r\n    onInput: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    children: props => {\r\n      if (TableDragSelect.propTypes.data(props)) {\r\n        return; // Let error be handled elsewhere\r\n      }\r\n      const error = new Error(\r\n        \"Invalid prop `children` supplied to `TableDragSelect`. Validation failed.\"\r\n      );\r\n      const trs = React.Children.toArray(props.children);\r\n      const rowCount = props.data.length;\r\n      const columnCount = props.data.length === 0 ? 0 : props.data[0].length;\r\n      if (trs.length !== rowCount) {\r\n        return error;\r\n      }\r\n      for (const tr of trs) {\r\n        const tds = React.Children.toArray(tr.props.children);\r\n        if (tr.type !== \"tr\" || tds.length !== columnCount) {\r\n          return error;\r\n        }\r\n        for (const td of tds) {\r\n          if (td.type !== \"td\") {\r\n            return error;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  static defaultProps = {\r\n    data: {},\r\n    maxRows: Infinity,\r\n    maxColumns: Infinity,\r\n    onSelectionStart: () => {},\r\n    onInput: () => {},\r\n    onChange: () => {}\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\r\n    window.addEventListener(\"touchend\", this.handleTouchEndWindow);\r\n    window.addEventListener(\"keydown\", this.handleKeyPressWindow);\r\n    window.addEventListener(\"keyup\", this.handleKeyUpWindow);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\r\n    window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\r\n    window.removeEventListener(\"keydown\", this.handleKeyPressWindow);\r\n    window.removeEventListener(\"keyup\", this.handleKeyUpWindow);\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <table className=\"table-drag-select\">\r\n        <tbody>{this.renderRows()}</tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  renderRows = () =>\r\n    React.Children.map(this.props.children, (tr, i) => {\r\n      return (\r\n        <tr key={i} {...tr.props}>\r\n          {React.Children.map(tr.props.children, (cell, j) => (\r\n            <Cell\r\n              key={j}\r\n              onTouchStart={this.handleTouchStartCell}\r\n              onTouchMove={this.handleTouchMoveCell}\r\n              fixedValue={cell.props.children}\r\n              value={this.props.data[i][j].value}\r\n              centerNote={this.props.data[i][j].centerNote}\r\n              cornerNote={this.props.data[i][j].cornerNote}\r\n              color={this.props.data[i][j].color}\r\n              selected={this.props.data[i][j].selected}\r\n              beingSelected={this.isCellBeingSelected(i, j)}\r\n              {...cell.props}\r\n            >\r\n              {cell.props.children}\r\n            </Cell>\r\n          ))}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  resetSelection() {\r\n    if(this.state.ctrlKeyIsPressed) return;\r\n\r\n    const data = clone(this.props.data);\r\n    for(let i = 0; i < data.length; i++)\r\n    {\r\n      for(let j = 0; j < data[i].length; j++)\r\n      {\r\n        data[i][j].selected = false;\r\n      }\r\n    }\r\n    this.setState({ selection: null, selectionStarted: false });\r\n    this.props.onChange(data); \r\n  }\r\n  \r\n  handleTouchStartCell = e => {\r\n    const isLeftClick = e.button === 0;\r\n    const isTouch = e.type !== \"mousedown\";\r\n    if (!this.state.selectionStarted && (isLeftClick || isTouch)) {\r\n      if(!this.eventIsInputButton(e)){\r\n        this.resetSelection();\r\n      }\r\n      e.preventDefault();\r\n      const { row, column } = this.eventToCellLocation(e);\r\n      this.props.onSelectionStart({ row, column });\r\n      this.setState(prevState => ({\r\n        selectionStarted: true,\r\n        selection: [{ row, column }]\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleTouchMoveCell = e => {\r\n    if (this.state.selectionStarted) {\r\n      e.preventDefault();\r\n      const { row, column } = this.eventToCellLocation(e);\r\n      // Do nothing if we already added that cell to the selection\r\n      if(this.state.selection.some(e => e.row === row && e.column === column)) return;\r\n\r\n      this.setState(prevState => ({\r\n        selection: [...prevState.selection, { row, column }]\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleTouchEndWindow = e => {\r\n    const isLeftClick = e.button === 0;\r\n    const isTouch = e.type !== \"mousedown\";\r\n    if (this.state.selectionStarted && (isLeftClick || isTouch)) {\r\n      const data = clone(this.props.data);\r\n      this.state.selection.forEach(element => {\r\n        data[element.row][element.column].selected = true;\r\n      });\r\n      this.setState({ selectionStarted: false });\r\n      this.props.onChange(data);\r\n    }\r\n    else{\r\n      if(!this.eventIsInputButton(e)){\r\n        this.resetSelection();\r\n      }\r\n    }\r\n  };\r\n\r\n  handleKeyUpWindow = e => {\r\n    this.setState({ctrlKeyIsPressed: e.ctrlKey})\r\n  };\r\n\r\n  handleKeyPressWindow = e => {\r\n    e.preventDefault();\r\n    if (this.state.selection === null) return;\r\n    this.setState({ctrlKeyIsPressed: e.ctrlKey})\r\n\r\n    const data = clone(this.props.data);\r\n\r\n    let shouldDelete = e.keyCode === 46 || e.keyCode === 8;\r\n    let isNumpadNumber = e.code.indexOf(\"Numpad\") !== -1\r\n    let isNumber = (e.keyCode >= 48 && e.keyCode <= 57) || isNumpadNumber;\r\n    let valueToInsert = shouldDelete ? null : isNumpadNumber ? e.code.substring(6) : String.fromCharCode(e.keyCode);\r\n\r\n    let shouldUpdateData = false;\r\n    // Delete\r\n    if(shouldDelete)\r\n    {\r\n      this.state.selection.forEach(element => {\r\n        shouldUpdateData = true;\r\n        data[element.row][element.column].cornerNote = valueToInsert\r\n        data[element.row][element.column].centerNote = valueToInsert\r\n        data[element.row][element.column].value = valueToInsert\r\n        data[element.row][element.column].color = valueToInsert\r\n      });\r\n    }\r\n    // Shift + Number\r\n    else if (this.props.inputMode === 1 && e.shiftKey && isNumber) {\r\n      shouldUpdateData = true;\r\n      this.state.selection.forEach(element => {\r\n        data[element.row][element.column].cornerNote = valueToInsert\r\n      });\r\n    }\r\n     // Control + Number\r\n    else if (this.props.inputMode === 1 && e.ctrlKey && isNumber) {\r\n      shouldUpdateData = true;\r\n      this.state.selection.forEach(element => {\r\n        data[element.row][element.column].centerNote = valueToInsert\r\n      });\r\n    }\r\n    // Number\r\n    else if (this.props.inputMode === 1 && isNumber) {\r\n      shouldUpdateData = true;\r\n      this.state.selection.forEach(element => {\r\n        data[element.row][element.column].value = valueToInsert\r\n      });\r\n    }\r\n    // Color\r\n    else if (this.props.inputMode === 2 && isNumber) {\r\n      shouldUpdateData = true;\r\n      this.state.selection.forEach(element => {\r\n        data[element.row][element.column].color = valueToInsert\r\n      });\r\n    }\r\n    \r\n    if(shouldUpdateData){\r\n      this.props.onChange(data);\r\n    }\r\n  };\r\n\r\n  isCellBeingSelected = (row, column) => {\r\n    return this.state.selectionStarted && this.state.selection.some(e => e.row === row && e.column === column);\r\n  };\r\n  \r\n  eventIsInputButton = e => {\r\n    return e.target.className === \"input-mode-button\"\r\n  };\r\n\r\n  // Takes a mouse or touch event and returns the corresponding row and cell.\r\n  // Example:\r\n  // eventToCellLocation(event);\r\n  // returns {row: 2, column: 3}\r\n  eventToCellLocation = e => {\r\n    let target;\r\n    // For touchmove and touchend events, e.target and e.touches[n].target are\r\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\r\n    // to use e.target.\r\n    if (e.touches) {\r\n      const touch = e.touches[0];\r\n      target = document.elementFromPoint(touch.clientX, touch.clientY);\r\n    } else {\r\n      target = e.target;\r\n      while (target.tagName !== \"TD\") {\r\n        target = target.parentNode;\r\n      }\r\n    }\r\n    return {\r\n      row: target.parentNode.rowIndex,\r\n      column: target.cellIndex\r\n    };\r\n  };\r\n}\r\n\r\nclass Cell extends React.Component {\r\n  // This optimization gave a 10% performance boost while drag-selecting cells\r\n  shouldComponentUpdate = nextProps =>\r\n    this.props.beingSelected !== nextProps.beingSelected ||\r\n    this.props.selected !== nextProps.selected ||\r\n    this.props.value !== nextProps.value ||\r\n    this.props.centerNote !== nextProps.centerNote ||\r\n    this.props.cornerNote !== nextProps.cornerNote ||\r\n    this.props.color !== nextProps.color;\r\n\r\n  componentDidMount = () => {\r\n    // We need to call addEventListener ourselves so that we can pass\r\n    // {passive: false}\r\n    this.td.addEventListener(\"touchstart\", this.handleTouchStart, {\r\n      passive: false\r\n    });\r\n    this.td.addEventListener(\"touchmove\", this.handleTouchMove, {\r\n      passive: false\r\n    });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.td.removeEventListener(\"touchstart\", this.handleTouchStart);\r\n    this.td.removeEventListener(\"touchmove\", this.handleTouchMove);\r\n  };\r\n\r\n  render = () => {\r\n    let {\r\n      className = \"\",\r\n      innerDivClassName = \"\",\r\n      disabled,\r\n      beingSelected,\r\n      selected,\r\n      onTouchStart,\r\n      onTouchMove,\r\n      value,\r\n      cornerNote,\r\n      centerNote,\r\n      fixedValue,\r\n      color,\r\n      ...props\r\n    } = this.props;\r\n    if (disabled) {\r\n      className += \" cell-disabled\";\r\n    } else {\r\n      className += \" cell-enabled\";\r\n      if (selected) {\r\n        className += \" cell-selected\";\r\n      }\r\n      if (beingSelected) {\r\n        className += \" cell-being-selected\";\r\n      }\r\n      if (color) {\r\n        innerDivClassName += \" color\" + color;\r\n      }\r\n    }\r\n\r\n    let cellValue;\r\n    if(fixedValue && fixedValue.trim())\r\n    {\r\n      cellValue = fixedValue;\r\n      innerDivClassName += \" cell-fixed-value\";\r\n    }\r\n    else\r\n    {\r\n      cellValue = value;\r\n    }\r\n    return (\r\n      <td\r\n        ref={td => (this.td = td)}\r\n        className={className}\r\n        onMouseDown={this.handleTouchStart}\r\n        onMouseMove={this.handleTouchMove}\r\n        {...props}\r\n      >\r\n        <div className={innerDivClassName}>{cellValue}</div>\r\n      </td>\r\n    );\r\n  };\r\n\r\n  handleTouchStart = e => {\r\n    if (!this.props.disabled) {\r\n      this.props.onTouchStart(e);\r\n    }\r\n  };\r\n\r\n  handleTouchMove = e => {\r\n    if (!this.props.disabled) {\r\n      this.props.onTouchMove(e);\r\n    }\r\n  };\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let gridSize = 10;\r\n    let grid = new Array(gridSize).fill((null)).map(() => new Array(gridSize).fill(null).map(() => (\r\n      {\r\n        selected: false,\r\n        value: null,\r\n        cornerNote: null,\r\n        centerNote: null,\r\n        fixedValue: null\r\n      })));\r\n\r\n    this.state = {\r\n      cells: grid,\r\n      galaxies: [\r\n        {i:1,j:2},\r\n        {i:2,j:12},{i:2,j:19},\r\n        {i:3,j:3},{i:3,j:9},{i:3,j:16},\r\n        {i:5,j:5},\r\n        {i:9,j:3},{i:9,j:14},{i:9,j:19},\r\n        {i:10,j:7},{i:10,j:10},{i:10,j:17},\r\n        {i:12,j:3},\r\n        {i:15,j:1},{i:15,j:13},\r\n        {i:17,j:3},{i:17,j:18},\r\n        {i:18,j:8},\r\n        {i:19,j:16}\r\n      ]\r\n    };\r\n  }\r\n  render = () => {\r\n    var galaxyMapping = this.state.galaxies.map(({i, j}, index) => {\r\n      // PointerEvents set to none so that we can click through to cells\r\n      const galaxyStyle = {top: i * 26.5, left: j * 26.5, 'pointerEvents': 'none'}\r\n      return <div key={index} className='galaxy' style={galaxyStyle}></div>\r\n    });\r\n    return <div className=\"container\">\r\n      <div className='grid'>\r\n        {galaxyMapping}\r\n        <TableDragSelect\r\n          data={this.state.cells}\r\n          inputMode={this.props.inputMode}\r\n          onChange={cells => this.setState({ cells })}\r\n        >\r\n          <tr>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td></td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          </tr>\r\n          <tr>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          </tr>\r\n          <tr>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          </tr>\r\n          <tr>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          </tr>\r\n          <tr>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          </tr>\r\n          <tr>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          </tr>\r\n          <tr>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          </tr>\r\n          <tr>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          </tr>\r\n          <tr>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          </tr>\r\n          <tr>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          <td> </td>\r\n          </tr>\r\n        </TableDragSelect>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}